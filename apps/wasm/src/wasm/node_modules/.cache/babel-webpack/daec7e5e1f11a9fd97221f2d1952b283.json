{"ast":null,"code":"var _objectSpread = require(\"/home/sam/devl/workspace/nxworkspace.git/wasm/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/objectSpread2\").default;\n\nvar _regeneratorRuntime = require(\"/home/sam/devl/workspace/nxworkspace.git/wasm/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/home/sam/devl/workspace/nxworkspace.git/wasm/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/defineProperty\").default;\n\nvar _asyncToGenerator = require(\"/home/sam/devl/workspace/nxworkspace.git/wasm/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar _toConsumableArray = require(\"/home/sam/devl/workspace/nxworkspace.git/wasm/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/toConsumableArray\").default;\n\n// GENERATED FILE. DO NOT EDIT.\nvar loader = function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.instantiate = instantiate;\n  exports.instantiateSync = instantiateSync;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.demangle = demangle;\n  exports.default = void 0; // Runtime header offsets\n\n  var ID_OFFSET = -8;\n  var SIZE_OFFSET = -4; // Runtime ids\n\n  var ARRAYBUFFER_ID = 0;\n  var STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n\n  var ARRAYBUFFERVIEW = 1 << 0;\n  var ARRAY = 1 << 1;\n  var STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n\n  var VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n\n  var VAL_SIGNED = 1 << 11;\n  var VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n\n  var VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n\n  var ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  var ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  var ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\n  var ARRAYBUFFERVIEW_SIZE = 12;\n  var ARRAY_LENGTH_OFFSET = 12;\n  var ARRAY_SIZE = 16;\n  var BIGINT = typeof BigUint64Array !== \"undefined\";\n  var THIS = Symbol();\n  var STRING_SMALLSIZE = 192; // break-even point in V8\n\n  var STRING_CHUNKSIZE = 1024; // mitigate stack overflow\n\n  var utf16 = new TextDecoder(\"utf-16le\", {\n    fatal: true\n  }); // != wtf16\n\n  /** Gets a string from memory. */\n\n  function getStringImpl(buffer, ptr) {\n    var len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    var wtf16 = new Uint16Array(buffer, ptr, len);\n    if (len <= STRING_SMALLSIZE) return String.fromCharCode.apply(String, _toConsumableArray(wtf16));\n\n    try {\n      return utf16.decode(wtf16);\n    } catch (_unused) {\n      var str = \"\",\n          off = 0;\n\n      while (len - off > STRING_CHUNKSIZE) {\n        str += String.fromCharCode.apply(String, _toConsumableArray(wtf16.subarray(off, off += STRING_CHUNKSIZE)));\n      }\n\n      return str + String.fromCharCode.apply(String, _toConsumableArray(wtf16.subarray(off)));\n    }\n  }\n  /** Prepares the base module prior to instantiation. */\n\n\n  function preInstantiate(imports) {\n    var extendedExports = {};\n\n    function getString(memory, ptr) {\n      if (!memory) return \"<yet unknown>\";\n      return getStringImpl(memory.buffer, ptr);\n    } // add common imports used by stdlib for convenience\n\n\n    var env = imports.env = imports.env || {};\n\n    env.abort = env.abort || function abort(msg, file, line, colm) {\n      var memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n\n      throw Error(\"abort: \".concat(getString(memory, msg), \" at \").concat(getString(memory, file), \":\").concat(line, \":\").concat(colm));\n    };\n\n    env.trace = env.trace || function trace(msg, n) {\n      var memory = extendedExports.memory || env.memory;\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      console.log(\"trace: \".concat(getString(memory, msg)).concat(n ? \" \" : \"\").concat(args.slice(0, n).join(\", \")));\n    };\n\n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n\n  var E_NOEXPORTRUNTIME = \"Operation requires compiling with --exportRuntime\";\n\n  var F_NOEXPORTRUNTIME = function F_NOEXPORTRUNTIME() {\n    throw Error(E_NOEXPORTRUNTIME);\n  };\n  /** Prepares the final module once instantiation is complete. */\n\n\n  function postInstantiate(extendedExports, instance) {\n    var exports = instance.exports;\n    var memory = exports.memory;\n    var table = exports.table;\n\n    var __new = exports.__new || F_NOEXPORTRUNTIME;\n\n    var __pin = exports.__pin || F_NOEXPORTRUNTIME;\n\n    var __unpin = exports.__unpin || F_NOEXPORTRUNTIME;\n\n    var __collect = exports.__collect || F_NOEXPORTRUNTIME;\n\n    var __rtti_base = exports.__rtti_base;\n    var getRttiCount = __rtti_base ? function (arr) {\n      return arr[__rtti_base >>> 2];\n    } : F_NOEXPORTRUNTIME;\n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n\n    function getInfo(id) {\n      var U32 = new Uint32Array(memory.buffer);\n      var count = getRttiCount(U32);\n      if ((id >>>= 0) >= count) throw Error(\"invalid id: \".concat(id));\n      return U32[(__rtti_base + 4 >>> 2) + id * 2];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n\n\n    function getArrayInfo(id) {\n      var info = getInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(\"not an array: \".concat(id, \", flags=\").concat(info));\n      return info;\n    }\n    /** Gets the runtime base id for the given id. */\n\n\n    function getBase(id) {\n      var U32 = new Uint32Array(memory.buffer);\n      var count = getRttiCount(U32);\n      if ((id >>>= 0) >= count) throw Error(\"invalid id: \".concat(id));\n      return U32[(__rtti_base + 4 >>> 2) + id * 2 + 1];\n    }\n    /** Gets the runtime alignment of a collection's values. */\n\n\n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n\n    /** Allocates a new string in the module's memory and returns its pointer. */\n\n\n    function __newString(str) {\n      if (str == null) return 0;\n      var length = str.length;\n\n      var ptr = __new(length << 1, STRING_ID);\n\n      var U16 = new Uint16Array(memory.buffer);\n\n      for (var i = 0, p = ptr >>> 1; i < length; ++i) {\n        U16[p + i] = str.charCodeAt(i);\n      }\n\n      return ptr;\n    }\n\n    extendedExports.__newString = __newString;\n    /** Reads a string from the module's memory by its pointer. */\n\n    function __getString(ptr) {\n      if (!ptr) return null;\n      var buffer = memory.buffer;\n      var id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(\"not a string: \".concat(ptr));\n      return getStringImpl(buffer, ptr);\n    }\n\n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment, signedness and floatness. */\n\n    function getView(alignLog2, signed, float) {\n      var buffer = memory.buffer;\n\n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n\n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n\n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n\n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n\n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n\n      throw Error(\"unsupported align: \".concat(alignLog2));\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n\n\n    function __newArray(id, values) {\n      var info = getArrayInfo(id);\n      var align = getValueAlign(info);\n      var length = values.length;\n\n      var buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n\n      var result;\n\n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n\n        var arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n\n        __unpin(buf);\n\n        var U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n\n      var view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n\n      if (info & VAL_MANAGED) {\n        for (var i = 0; i < length; ++i) {\n          var value = values[i];\n          view[(buf >>> align) + i] = value;\n        }\n      } else {\n        view.set(values, buf >>> align);\n      }\n\n      return result;\n    }\n\n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n\n    function __getArrayView(arr) {\n      var U32 = new Uint32Array(memory.buffer);\n      var id = U32[arr + ID_OFFSET >>> 2];\n      var info = getArrayInfo(id);\n      var align = getValueAlign(info);\n      var buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      var length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n    }\n\n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n\n    function __getArray(arr) {\n      var input = __getArrayView(arr);\n\n      var len = input.length;\n      var out = new Array(len);\n\n      for (var i = 0; i < len; i++) {\n        out[i] = input[i];\n      }\n\n      return out;\n    }\n\n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n\n    function __getArrayBuffer(ptr) {\n      var buffer = memory.buffer;\n      var length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr, ptr + length);\n    }\n\n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Copies a typed array's values from the module's memory. */\n\n    function getTypedArray(Type, alignLog2, ptr) {\n      return new Type(getTypedArrayView(Type, alignLog2, ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n\n\n    function getTypedArrayView(Type, alignLog2, ptr) {\n      var buffer = memory.buffer;\n      var U32 = new Uint32Array(buffer);\n      var bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n\n\n    function attachTypedArrayFunctions(ctor, name, align) {\n      extendedExports[\"__get\".concat(name)] = getTypedArray.bind(null, ctor, align);\n      extendedExports[\"__get\".concat(name, \"View\")] = getTypedArrayView.bind(null, ctor, align);\n    }\n\n    [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array].forEach(function (ctor) {\n      attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n\n    if (BIGINT) {\n      [BigUint64Array, BigInt64Array].forEach(function (ctor) {\n        attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n\n\n    function __instanceof(ptr, baseId) {\n      var U32 = new Uint32Array(memory.buffer);\n      var id = U32[ptr + ID_OFFSET >>> 2];\n\n      if (id <= getRttiCount(U32)) {\n        do {\n          if (id == baseId) return true;\n          id = getBase(id);\n        } while (id);\n      }\n\n      return false;\n    }\n\n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n\n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n\n    return demangle(exports, extendedExports);\n  }\n\n  function isResponse(src) {\n    return typeof Response !== \"undefined\" && src instanceof Response;\n  }\n\n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n\n\n  function instantiate(_x) {\n    return _instantiate.apply(this, arguments);\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n\n\n  function _instantiate() {\n    _instantiate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var imports,\n          module,\n          extended,\n          instance,\n          exports,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              imports = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.t0 = isResponse;\n              _context.next = 4;\n              return source;\n\n            case 4:\n              _context.t1 = source = _context.sent;\n\n              if (!(0, _context.t0)(_context.t1)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", instantiateStreaming(source, imports));\n\n            case 7:\n              if (!isModule(source)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.t2 = source;\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.next = 13;\n              return WebAssembly.compile(source);\n\n            case 13:\n              _context.t2 = _context.sent;\n\n            case 14:\n              module = _context.t2;\n              extended = preInstantiate(imports);\n              _context.next = 18;\n              return WebAssembly.instantiate(module, imports);\n\n            case 18:\n              instance = _context.sent;\n              exports = postInstantiate(extended, instance);\n              return _context.abrupt(\"return\", {\n                module: module,\n                instance: instance,\n                exports: exports\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _instantiate.apply(this, arguments);\n  }\n\n  function instantiateSync(source) {\n    var imports = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var module = isModule(source) ? source : new WebAssembly.Module(source);\n    var extended = preInstantiate(imports);\n    var instance = new WebAssembly.Instance(module, imports);\n    var exports = postInstantiate(extended, instance);\n    return {\n      module: module,\n      instance: instance,\n      exports: exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\n\n\n  function instantiateStreaming(_x2) {\n    return _instantiateStreaming.apply(this, arguments);\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n\n\n  function _instantiateStreaming() {\n    _instantiateStreaming = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(source) {\n      var imports,\n          extended,\n          result,\n          exports,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              imports = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n\n              if (WebAssembly.instantiateStreaming) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.t0 = instantiate;\n              _context2.t1 = isResponse;\n              _context2.next = 6;\n              return source;\n\n            case 6:\n              _context2.t2 = source = _context2.sent;\n\n              if (!(0, _context2.t1)(_context2.t2)) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.t3 = source.arrayBuffer();\n              _context2.next = 12;\n              break;\n\n            case 11:\n              _context2.t3 = source;\n\n            case 12:\n              _context2.t4 = _context2.t3;\n              _context2.t5 = imports;\n              return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t4, _context2.t5));\n\n            case 15:\n              extended = preInstantiate(imports);\n              _context2.next = 18;\n              return WebAssembly.instantiateStreaming(source, imports);\n\n            case 18:\n              result = _context2.sent;\n              exports = postInstantiate(extended, result.instance);\n              return _context2.abrupt(\"return\", _objectSpread(_objectSpread({}, result), {}, {\n                exports: exports\n              }));\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _instantiateStreaming.apply(this, arguments);\n  }\n\n  function demangle(exports) {\n    var extendedExports = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var setArgumentsLength = exports[\"__argumentsLength\"] ? function (length) {\n      exports[\"__argumentsLength\"].value = length;\n    } : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function () {\n      /* nop */\n    };\n\n    var _loop = function _loop(internalName) {\n      if (!Object.prototype.hasOwnProperty.call(exports, internalName)) return \"continue\";\n      var elem = exports[internalName];\n      var parts = internalName.split(\".\");\n      var curr = extendedExports;\n\n      while (parts.length > 1) {\n        var part = parts.shift();\n        if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n        curr = curr[part];\n      }\n\n      var name = parts[0];\n      var hash = name.indexOf(\"#\");\n\n      if (hash >= 0) {\n        var className = name.substring(0, hash);\n        var classElem = curr[className];\n\n        if (typeof classElem === \"undefined\" || !classElem.prototype) {\n          var ctor = function ctor() {\n            var _ctor$prototype;\n\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            return ctor.wrap((_ctor$prototype = ctor.prototype).constructor.apply(_ctor$prototype, [0].concat(args)));\n          };\n\n          ctor.prototype = {\n            valueOf: function valueOf() {\n              return this[THIS];\n            }\n          };\n\n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype, _defineProperty({}, THIS, {\n              value: thisValue,\n              writable: false\n            }));\n          };\n\n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(function (name) {\n            return Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name));\n          });\n          curr[className] = ctor;\n        }\n\n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n\n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            var getter = exports[internalName.replace(\"set:\", \"get:\")];\n            var setter = exports[internalName.replace(\"get:\", \"set:\")];\n            Object.defineProperty(curr, name, {\n              get: function get() {\n                return getter(this[THIS]);\n              },\n              set: function set(value) {\n                setter(this[THIS], value);\n              },\n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = function () {\n              setArgumentsLength(arguments.length);\n              return elem.apply(void 0, arguments);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              // !\n              setArgumentsLength(args.length);\n              return elem.apply(void 0, [this[THIS]].concat(args));\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            Object.defineProperty(curr, name, {\n              get: exports[internalName.replace(\"set:\", \"get:\")],\n              set: exports[internalName.replace(\"get:\", \"set:\")],\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n          (curr[name] = function () {\n            setArgumentsLength(arguments.length);\n            return elem.apply(void 0, arguments);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    };\n\n    for (var internalName in exports) {\n      var _ret = _loop(internalName);\n\n      if (_ret === \"continue\") continue;\n    }\n\n    return extendedExports;\n  }\n\n  var _default = {\n    instantiate: instantiate,\n    instantiateSync: instantiateSync,\n    instantiateStreaming: instantiateStreaming,\n    demangle: demangle\n  };\n  exports.default = _default;\n  return exports;\n}({});\n\nif (typeof define === 'function' && define.amd) define([], function () {\n  return loader;\n});else if (typeof module === 'object' && typeof exports === 'object') module.exports = loader;","map":{"version":3,"sources":["/home/sam/devl/workspace/nxworkspace.git/wasm/apps/wasm/wasm/node_modules/@assemblyscript/loader/umd/index.js"],"names":["loader","exports","Object","defineProperty","value","instantiate","instantiateSync","instantiateStreaming","demangle","default","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","STATICARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","Symbol","STRING_SMALLSIZE","STRING_CHUNKSIZE","utf16","TextDecoder","fatal","getStringImpl","buffer","ptr","len","Uint32Array","wtf16","Uint16Array","String","fromCharCode","decode","str","off","subarray","preInstantiate","imports","extendedExports","getString","memory","env","abort","msg","file","line","colm","Error","trace","n","args","console","log","slice","join","seed","Date","now","Math","E_NOEXPORTRUNTIME","F_NOEXPORTRUNTIME","postInstantiate","instance","table","__new","__pin","__unpin","__collect","__rtti_base","getRttiCount","arr","getInfo","id","U32","count","getArrayInfo","info","getBase","getValueAlign","clz32","__newString","length","U16","i","p","charCodeAt","__getString","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__newArray","values","align","buf","result","view","set","__getArrayView","__getArray","input","out","Array","__getArrayBuffer","getTypedArray","Type","getTypedArrayView","bufPtr","attachTypedArrayFunctions","ctor","name","bind","Uint8ClampedArray","forEach","BYTES_PER_ELEMENT","__instanceof","baseId","isResponse","src","Response","isModule","WebAssembly","Module","source","compile","module","extended","Instance","arrayBuffer","setArgumentsLength","internalName","prototype","hasOwnProperty","call","elem","parts","split","curr","part","shift","hash","indexOf","className","substring","classElem","wrap","constructor","valueOf","thisValue","create","writable","getOwnPropertyNames","getOwnPropertyDescriptor","test","getter","replace","setter","get","enumerable","original","_default","define","amd"],"mappings":"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","sourcesContent":["// GENERATED FILE. DO NOT EDIT.\nvar loader = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.instantiate = instantiate;\n  exports.instantiateSync = instantiateSync;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.demangle = demangle;\n  exports.default = void 0;\n  // Runtime header offsets\n  const ID_OFFSET = -8;\n  const SIZE_OFFSET = -4; // Runtime ids\n  \n  const ARRAYBUFFER_ID = 0;\n  const STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n  \n  const ARRAYBUFFERVIEW = 1 << 0;\n  const ARRAY = 1 << 1;\n  const STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n  \n  const VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n  \n  const VAL_SIGNED = 1 << 11;\n  const VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n  \n  const VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n  \n  const ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  const ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  const ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\n  const ARRAYBUFFERVIEW_SIZE = 12;\n  const ARRAY_LENGTH_OFFSET = 12;\n  const ARRAY_SIZE = 16;\n  const BIGINT = typeof BigUint64Array !== \"undefined\";\n  const THIS = Symbol();\n  const STRING_SMALLSIZE = 192; // break-even point in V8\n  \n  const STRING_CHUNKSIZE = 1024; // mitigate stack overflow\n  \n  const utf16 = new TextDecoder(\"utf-16le\", {\n    fatal: true\n  }); // != wtf16\n  \n  /** Gets a string from memory. */\n  \n  function getStringImpl(buffer, ptr) {\n    let len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    const wtf16 = new Uint16Array(buffer, ptr, len);\n    if (len <= STRING_SMALLSIZE) return String.fromCharCode(...wtf16);\n  \n    try {\n      return utf16.decode(wtf16);\n    } catch {\n      let str = \"\",\n          off = 0;\n  \n      while (len - off > STRING_CHUNKSIZE) {\n        str += String.fromCharCode(...wtf16.subarray(off, off += STRING_CHUNKSIZE));\n      }\n  \n      return str + String.fromCharCode(...wtf16.subarray(off));\n    }\n  }\n  /** Prepares the base module prior to instantiation. */\n  \n  \n  function preInstantiate(imports) {\n    const extendedExports = {};\n  \n    function getString(memory, ptr) {\n      if (!memory) return \"<yet unknown>\";\n      return getStringImpl(memory.buffer, ptr);\n    } // add common imports used by stdlib for convenience\n  \n  \n    const env = imports.env = imports.env || {};\n  \n    env.abort = env.abort || function abort(msg, file, line, colm) {\n      const memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n  \n      throw Error(`abort: ${getString(memory, msg)} at ${getString(memory, file)}:${line}:${colm}`);\n    };\n  \n    env.trace = env.trace || function trace(msg, n, ...args) {\n      const memory = extendedExports.memory || env.memory;\n      console.log(`trace: ${getString(memory, msg)}${n ? \" \" : \"\"}${args.slice(0, n).join(\", \")}`);\n    };\n  \n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n  \n  const E_NOEXPORTRUNTIME = \"Operation requires compiling with --exportRuntime\";\n  \n  const F_NOEXPORTRUNTIME = function () {\n    throw Error(E_NOEXPORTRUNTIME);\n  };\n  /** Prepares the final module once instantiation is complete. */\n  \n  \n  function postInstantiate(extendedExports, instance) {\n    const exports = instance.exports;\n    const memory = exports.memory;\n    const table = exports.table;\n  \n    const __new = exports.__new || F_NOEXPORTRUNTIME;\n  \n    const __pin = exports.__pin || F_NOEXPORTRUNTIME;\n  \n    const __unpin = exports.__unpin || F_NOEXPORTRUNTIME;\n  \n    const __collect = exports.__collect || F_NOEXPORTRUNTIME;\n  \n    const __rtti_base = exports.__rtti_base;\n    const getRttiCount = __rtti_base ? function (arr) {\n      return arr[__rtti_base >>> 2];\n    } : F_NOEXPORTRUNTIME;\n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n  \n    function getInfo(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = getRttiCount(U32);\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n  \n  \n    function getArrayInfo(id) {\n      const info = getInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}, flags=${info}`);\n      return info;\n    }\n    /** Gets the runtime base id for the given id. */\n  \n  \n    function getBase(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = getRttiCount(U32);\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2 + 1];\n    }\n    /** Gets the runtime alignment of a collection's values. */\n  \n  \n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n  \n    /** Allocates a new string in the module's memory and returns its pointer. */\n  \n  \n    function __newString(str) {\n      if (str == null) return 0;\n      const length = str.length;\n  \n      const ptr = __new(length << 1, STRING_ID);\n  \n      const U16 = new Uint16Array(memory.buffer);\n  \n      for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n  \n      return ptr;\n    }\n  \n    extendedExports.__newString = __newString;\n    /** Reads a string from the module's memory by its pointer. */\n  \n    function __getString(ptr) {\n      if (!ptr) return null;\n      const buffer = memory.buffer;\n      const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n      return getStringImpl(buffer, ptr);\n    }\n  \n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment, signedness and floatness. */\n  \n    function getView(alignLog2, signed, float) {\n      const buffer = memory.buffer;\n  \n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n  \n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n  \n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n  \n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n  \n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n  \n      throw Error(`unsupported align: ${alignLog2}`);\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n  \n  \n    function __newArray(id, values) {\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      const length = values.length;\n  \n      const buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n  \n      let result;\n  \n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n  \n        const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n  \n        __unpin(buf);\n  \n        const U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n  \n      const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n  \n      if (info & VAL_MANAGED) {\n        for (let i = 0; i < length; ++i) {\n          const value = values[i];\n          view[(buf >>> align) + i] = value;\n        }\n      } else {\n        view.set(values, buf >>> align);\n      }\n  \n      return result;\n    }\n  \n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  \n    function __getArrayView(arr) {\n      const U32 = new Uint32Array(memory.buffer);\n      const id = U32[arr + ID_OFFSET >>> 2];\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      let buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      const length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n    }\n  \n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  \n    function __getArray(arr) {\n      const input = __getArrayView(arr);\n  \n      const len = input.length;\n      const out = new Array(len);\n  \n      for (let i = 0; i < len; i++) out[i] = input[i];\n  \n      return out;\n    }\n  \n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n  \n    function __getArrayBuffer(ptr) {\n      const buffer = memory.buffer;\n      const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr, ptr + length);\n    }\n  \n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Copies a typed array's values from the module's memory. */\n  \n    function getTypedArray(Type, alignLog2, ptr) {\n      return new Type(getTypedArrayView(Type, alignLog2, ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n  \n  \n    function getTypedArrayView(Type, alignLog2, ptr) {\n      const buffer = memory.buffer;\n      const U32 = new Uint32Array(buffer);\n      const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n  \n  \n    function attachTypedArrayFunctions(ctor, name, align) {\n      extendedExports[`__get${name}`] = getTypedArray.bind(null, ctor, align);\n      extendedExports[`__get${name}View`] = getTypedArrayView.bind(null, ctor, align);\n    }\n  \n    [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n  \n    if (BIGINT) {\n      [BigUint64Array, BigInt64Array].forEach(ctor => {\n        attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n  \n  \n    function __instanceof(ptr, baseId) {\n      const U32 = new Uint32Array(memory.buffer);\n      let id = U32[ptr + ID_OFFSET >>> 2];\n  \n      if (id <= getRttiCount(U32)) {\n        do {\n          if (id == baseId) return true;\n          id = getBase(id);\n        } while (id);\n      }\n  \n      return false;\n    }\n  \n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n  \n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n  \n    return demangle(exports, extendedExports);\n  }\n  \n  function isResponse(src) {\n    return typeof Response !== \"undefined\" && src instanceof Response;\n  }\n  \n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n  \n  \n  async function instantiate(source, imports = {}) {\n    if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n    const module = isModule(source) ? source : await WebAssembly.compile(source);\n    const extended = preInstantiate(imports);\n    const instance = await WebAssembly.instantiate(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n  \n  \n  function instantiateSync(source, imports = {}) {\n    const module = isModule(source) ? source : new WebAssembly.Module(source);\n    const extended = preInstantiate(imports);\n    const instance = new WebAssembly.Instance(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\n  \n  \n  async function instantiateStreaming(source, imports = {}) {\n    if (!WebAssembly.instantiateStreaming) {\n      return instantiate(isResponse(source = await source) ? source.arrayBuffer() : source, imports);\n    }\n  \n    const extended = preInstantiate(imports);\n    const result = await WebAssembly.instantiateStreaming(source, imports);\n    const exports = postInstantiate(extended, result.instance);\n    return { ...result,\n      exports\n    };\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n  \n  \n  function demangle(exports, extendedExports = {}) {\n    const setArgumentsLength = exports[\"__argumentsLength\"] ? length => {\n      exports[\"__argumentsLength\"].value = length;\n    } : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || (() => {\n      /* nop */\n    });\n  \n    for (let internalName in exports) {\n      if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n      const elem = exports[internalName];\n      let parts = internalName.split(\".\");\n      let curr = extendedExports;\n  \n      while (parts.length > 1) {\n        let part = parts.shift();\n        if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n        curr = curr[part];\n      }\n  \n      let name = parts[0];\n      let hash = name.indexOf(\"#\");\n  \n      if (hash >= 0) {\n        const className = name.substring(0, hash);\n        const classElem = curr[className];\n  \n        if (typeof classElem === \"undefined\" || !classElem.prototype) {\n          const ctor = function (...args) {\n            return ctor.wrap(ctor.prototype.constructor(0, ...args));\n          };\n  \n          ctor.prototype = {\n            valueOf() {\n              return this[THIS];\n            }\n  \n          };\n  \n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype, {\n              [THIS]: {\n                value: thisValue,\n                writable: false\n              }\n            });\n          };\n  \n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(name => Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name)));\n          curr[className] = ctor;\n        }\n  \n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n  \n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            let getter = exports[internalName.replace(\"set:\", \"get:\")];\n            let setter = exports[internalName.replace(\"get:\", \"set:\")];\n            Object.defineProperty(curr, name, {\n              get() {\n                return getter(this[THIS]);\n              },\n  \n              set(value) {\n                setter(this[THIS], value);\n              },\n  \n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = (...args) => {\n              setArgumentsLength(args.length);\n              return elem(...args);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function (...args) {\n              // !\n              setArgumentsLength(args.length);\n              return elem(this[THIS], ...args);\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            Object.defineProperty(curr, name, {\n              get: exports[internalName.replace(\"set:\", \"get:\")],\n              set: exports[internalName.replace(\"get:\", \"set:\")],\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    }\n  \n    return extendedExports;\n  }\n  \n  var _default = {\n    instantiate,\n    instantiateSync,\n    instantiateStreaming,\n    demangle\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return loader; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = loader;\n"]},"metadata":{},"sourceType":"script"}